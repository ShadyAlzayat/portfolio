{"ast":null,"code":"import { c as createAnimation } from './animation-d0becaea.js';\n\nvar shadow = function shadow(el) {\n  return el.shadowRoot || el;\n};\n\nvar iosTransitionAnimation = function iosTransitionAnimation(navEl, opts) {\n  try {\n    var DURATION = 540;\n    var EASING = 'cubic-bezier(0.32,0.72,0,1)';\n    var OPACITY_1 = 'opacity';\n    var TRANSFORM_1 = 'transform';\n    var CENTER_1 = '0%';\n    var OFF_OPACITY = 0.8;\n    var isRTL_1 = navEl.ownerDocument.dir === 'rtl';\n    var OFF_RIGHT_1 = isRTL_1 ? '-99.5%' : '99.5%';\n    var OFF_LEFT_1 = isRTL_1 ? '33%' : '-33%';\n    var enteringEl = opts.enteringEl;\n    var leavingEl = opts.leavingEl;\n    var backDirection_1 = opts.direction === 'back';\n    var contentEl = enteringEl.querySelector(':scope > ion-content');\n    var headerEls = enteringEl.querySelectorAll(':scope > ion-header > *:not(ion-toolbar), :scope > ion-footer > *');\n    var enteringToolBarEls = enteringEl.querySelectorAll(':scope > ion-header > ion-toolbar');\n    var rootAnimation_1 = createAnimation();\n    var enteringContentAnimation = createAnimation();\n    rootAnimation_1.addElement(enteringEl).duration(opts.duration || DURATION).easing(opts.easing || EASING).fill('both').beforeRemoveClass('ion-page-invisible');\n\n    if (leavingEl && navEl) {\n      var navDecorAnimation = createAnimation();\n      navDecorAnimation.addElement(navEl);\n      rootAnimation_1.addAnimation(navDecorAnimation);\n    }\n\n    if (!contentEl && enteringToolBarEls.length === 0 && headerEls.length === 0) {\n      enteringContentAnimation.addElement(enteringEl.querySelector(':scope > .ion-page, :scope > ion-nav, :scope > ion-tabs'));\n    } else {\n      enteringContentAnimation.addElement(contentEl);\n      enteringContentAnimation.addElement(headerEls);\n    }\n\n    rootAnimation_1.addAnimation(enteringContentAnimation);\n\n    if (backDirection_1) {\n      enteringContentAnimation.beforeClearStyles([OPACITY_1]).fromTo('transform', \"translateX(\" + OFF_LEFT_1 + \")\", \"translateX(\" + CENTER_1 + \")\").fromTo(OPACITY_1, OFF_OPACITY, 1);\n    } else {\n      // entering content, forward direction\n      enteringContentAnimation.beforeClearStyles([OPACITY_1]).fromTo('transform', \"translateX(\" + OFF_RIGHT_1 + \")\", \"translateX(\" + CENTER_1 + \")\");\n    }\n\n    if (contentEl) {\n      var enteringTransitionEffectEl = shadow(contentEl).querySelector('.transition-effect');\n\n      if (enteringTransitionEffectEl) {\n        var enteringTransitionCoverEl = enteringTransitionEffectEl.querySelector('.transition-cover');\n        var enteringTransitionShadowEl = enteringTransitionEffectEl.querySelector('.transition-shadow');\n        var enteringTransitionEffect = createAnimation();\n        var enteringTransitionCover = createAnimation();\n        var enteringTransitionShadow = createAnimation();\n        enteringTransitionEffect.addElement(enteringTransitionEffectEl).beforeStyles({\n          opacity: '1'\n        }).afterStyles({\n          opacity: ''\n        });\n        enteringTransitionCover.addElement(enteringTransitionCoverEl).beforeClearStyles([OPACITY_1]).fromTo(OPACITY_1, 0, 0.1);\n        enteringTransitionShadow.addElement(enteringTransitionShadowEl).beforeClearStyles([OPACITY_1]).fromTo(OPACITY_1, 0.03, 0.70);\n        enteringTransitionEffect.addAnimation([enteringTransitionCover, enteringTransitionShadow]);\n        enteringContentAnimation.addAnimation([enteringTransitionEffect]);\n      }\n    }\n\n    enteringToolBarEls.forEach(function (enteringToolBarEl) {\n      var enteringToolBar = createAnimation();\n      enteringToolBar.addElement(enteringToolBarEl);\n      rootAnimation_1.addAnimation(enteringToolBar);\n      var enteringTitle = createAnimation();\n      enteringTitle.addElement(enteringToolBarEl.querySelector('ion-title'));\n      var enteringToolBarButtons = createAnimation();\n      enteringToolBarButtons.addElement(enteringToolBarEl.querySelectorAll('ion-buttons,[menuToggle]'));\n      var enteringToolBarItems = createAnimation();\n      enteringToolBarItems.addElement(enteringToolBarEl.querySelectorAll(':scope > *:not(ion-title):not(ion-buttons):not([menuToggle])'));\n      var enteringToolBarBg = createAnimation();\n      enteringToolBarBg.addElement(shadow(enteringToolBarEl).querySelector('.toolbar-background'));\n      var enteringBackButton = createAnimation();\n      var backButtonEl = enteringToolBarEl.querySelector('ion-back-button');\n\n      if (backButtonEl) {\n        enteringBackButton.addElement(backButtonEl);\n      }\n\n      enteringToolBar.addAnimation([enteringTitle, enteringToolBarButtons, enteringToolBarItems, enteringToolBarBg, enteringBackButton]);\n      enteringTitle.fromTo(OPACITY_1, 0.01, 1);\n      enteringToolBarButtons.fromTo(OPACITY_1, 0.01, 1);\n      enteringToolBarItems.fromTo(OPACITY_1, 0.01, 1);\n\n      if (backDirection_1) {\n        enteringTitle.fromTo('transform', \"translateX(\" + OFF_LEFT_1 + \")\", \"translateX(\" + CENTER_1 + \")\");\n        enteringToolBarItems.fromTo('transform', \"translateX(\" + OFF_LEFT_1 + \")\", \"translateX(\" + CENTER_1 + \")\"); // back direction, entering page has a back button\n\n        enteringBackButton.fromTo(OPACITY_1, 0.01, 1);\n      } else {\n        // entering toolbar, forward direction\n        enteringTitle.fromTo('transform', \"translateX(\" + OFF_RIGHT_1 + \")\", \"translateX(\" + CENTER_1 + \")\");\n        enteringToolBarItems.fromTo('transform', \"translateX(\" + OFF_RIGHT_1 + \")\", \"translateX(\" + CENTER_1 + \")\");\n        enteringToolBarBg.beforeClearStyles([OPACITY_1]).keyframes([{\n          offset: 0,\n          opacity: 0.01\n        }, {\n          offset: 0.99,\n          opacity: 1\n        }, {\n          offset: 1,\n          opacity: 'var(--opacity)' // TODO: Find a way to support clearing properties from Web Animations\n\n        }]); // forward direction, entering page has a back button\n\n        enteringBackButton.fromTo(OPACITY_1, 0.01, 1);\n\n        if (backButtonEl) {\n          var enteringBackBtnText = createAnimation();\n          enteringBackBtnText.addElement(shadow(backButtonEl).querySelector('.button-text')).fromTo(\"transform\", isRTL_1 ? 'translateX(-100px)' : 'translateX(100px)', 'translateX(0px)');\n          enteringToolBar.addAnimation(enteringBackBtnText);\n        }\n      }\n    }); // setup leaving view\n\n    if (leavingEl) {\n      var leavingContent = createAnimation();\n      var leavingContentEl = leavingEl.querySelector(':scope > ion-content');\n      leavingContent.addElement(leavingContentEl);\n      leavingContent.addElement(leavingEl.querySelectorAll(':scope > ion-header > *:not(ion-toolbar), :scope > ion-footer > *'));\n      rootAnimation_1.addAnimation(leavingContent);\n\n      if (backDirection_1) {\n        // leaving content, back direction\n        leavingContent.beforeClearStyles([OPACITY_1]).fromTo('transform', \"translateX(\" + CENTER_1 + \")\", isRTL_1 ? 'translateX(-100%)' : 'translateX(100%)');\n      } else {\n        // leaving content, forward direction\n        leavingContent.fromTo('transform', \"translateX(\" + CENTER_1 + \")\", \"translateX(\" + OFF_LEFT_1 + \")\").fromTo(OPACITY_1, 1, OFF_OPACITY);\n      }\n\n      if (leavingContentEl) {\n        var leavingTransitionEffectEl = shadow(leavingContentEl).querySelector('.transition-effect');\n\n        if (leavingTransitionEffectEl) {\n          var leavingTransitionCoverEl = leavingTransitionEffectEl.querySelector('.transition-cover');\n          var leavingTransitionShadowEl = leavingTransitionEffectEl.querySelector('.transition-shadow');\n          var leavingTransitionEffect = createAnimation();\n          var leavingTransitionCover = createAnimation();\n          var leavingTransitionShadow = createAnimation();\n          leavingTransitionEffect.addElement(leavingTransitionEffectEl).beforeStyles({\n            opacity: '1'\n          }).afterStyles({\n            opacity: ''\n          });\n          leavingTransitionCover.addElement(leavingTransitionCoverEl).beforeClearStyles([OPACITY_1]).fromTo(OPACITY_1, 0.1, 0);\n          leavingTransitionShadow.addElement(leavingTransitionShadowEl).beforeClearStyles([OPACITY_1]).fromTo(OPACITY_1, 0.70, 0.03);\n          leavingTransitionEffect.addAnimation([leavingTransitionCover, leavingTransitionShadow]);\n          leavingContent.addAnimation([leavingTransitionEffect]);\n        }\n      }\n\n      var leavingToolBarEls = leavingEl.querySelectorAll(':scope > ion-header > ion-toolbar');\n      leavingToolBarEls.forEach(function (leavingToolBarEl) {\n        var leavingToolBar = createAnimation();\n        leavingToolBar.addElement(leavingToolBarEl);\n        var leavingTitle = createAnimation();\n        leavingTitle.addElement(leavingToolBarEl.querySelector('ion-title'));\n        var leavingToolBarButtons = createAnimation();\n        leavingToolBarButtons.addElement(leavingToolBarEl.querySelectorAll('ion-buttons,[menuToggle]'));\n        var leavingToolBarItems = createAnimation();\n        var leavingToolBarItemEls = leavingToolBarEl.querySelectorAll(':scope > *:not(ion-title):not(ion-buttons):not([menuToggle])');\n\n        if (leavingToolBarItemEls.length > 0) {\n          leavingToolBarItems.addElement(leavingToolBarItemEls);\n        }\n\n        var leavingToolBarBg = createAnimation();\n        leavingToolBarBg.addElement(shadow(leavingToolBarEl).querySelector('.toolbar-background'));\n        var leavingBackButton = createAnimation();\n        var backButtonEl = leavingToolBarEl.querySelector('ion-back-button');\n\n        if (backButtonEl) {\n          leavingBackButton.addElement(backButtonEl);\n        }\n\n        leavingToolBar.addAnimation([leavingTitle, leavingToolBarButtons, leavingToolBarItems, leavingBackButton, leavingToolBarBg]);\n        rootAnimation_1.addAnimation(leavingToolBar); // fade out leaving toolbar items\n\n        leavingBackButton.fromTo(OPACITY_1, 0.99, 0);\n        leavingTitle.fromTo(OPACITY_1, 0.99, 0);\n        leavingToolBarButtons.fromTo(OPACITY_1, 0.99, 0);\n        leavingToolBarItems.fromTo(OPACITY_1, 0.99, 0);\n\n        if (backDirection_1) {\n          // leaving toolbar, back direction\n          leavingTitle.fromTo('transform', \"translateX(\" + CENTER_1 + \")\", isRTL_1 ? 'translateX(-100%)' : 'translateX(100%)');\n          leavingToolBarItems.fromTo('transform', \"translateX(\" + CENTER_1 + \")\", isRTL_1 ? 'translateX(-100%)' : 'translateX(100%)'); // leaving toolbar, back direction, and there's no entering toolbar\n          // should just slide out, no fading out\n\n          leavingToolBarBg.beforeClearStyles([OPACITY_1]).fromTo(OPACITY_1, 1, 0.01);\n\n          if (backButtonEl) {\n            var leavingBackBtnText = createAnimation();\n            leavingBackBtnText.addElement(shadow(backButtonEl).querySelector('.button-text'));\n            leavingBackBtnText.fromTo('transform', \"translateX(\" + CENTER_1 + \")\", \"translateX(\" + ((isRTL_1 ? -124 : 124) + 'px') + \")\");\n            leavingToolBar.addAnimation(leavingBackBtnText);\n          }\n        } else {\n          // leaving toolbar, forward direction\n          leavingTitle.fromTo('transform', \"translateX(\" + CENTER_1 + \")\", \"translateX(\" + OFF_LEFT_1 + \")\").afterClearStyles([TRANSFORM_1]);\n          leavingToolBarItems.fromTo('transform', \"translateX(\" + CENTER_1 + \")\", \"translateX(\" + OFF_LEFT_1 + \")\").afterClearStyles([TRANSFORM_1, OPACITY_1]);\n          leavingBackButton.afterClearStyles([OPACITY_1]);\n          leavingTitle.afterClearStyles([OPACITY_1]);\n          leavingToolBarButtons.afterClearStyles([OPACITY_1]);\n        }\n      });\n    }\n\n    return rootAnimation_1;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport { iosTransitionAnimation, shadow };","map":null,"metadata":{},"sourceType":"module"}