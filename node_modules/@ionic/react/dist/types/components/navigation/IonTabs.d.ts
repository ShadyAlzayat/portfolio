import React from 'react';
interface Props {
    children: React.ReactNode;
}
export declare const IonTabs: {
    new (props: Props): {
        context: import("../../contexts/NavContext").NavContextState;
        routerOutletRef: React.Ref<HTMLIonRouterOutletElement>;
        render(): JSX.Element;
        setState<K extends never>(state: {} | ((prevState: Readonly<{}>, props: Readonly<Props>) => {} | Pick<{}, K> | null) | Pick<{}, K> | null, callback?: (() => void) | undefined): void;
        forceUpdate(callBack?: (() => void) | undefined): void;
        readonly props: Readonly<Props> & Readonly<{
            children?: React.ReactNode;
        }>;
        state: Readonly<{}>;
        refs: {
            [key: string]: React.ReactInstance;
        };
    };
    readonly displayName: string;
    readonly contextType: React.Context<import("../../contexts/NavContext").NavContextState>;
};
export {};
