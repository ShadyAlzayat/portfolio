/// <reference types="react" />
import { JSX } from '@ionic/core';
export declare type ActionSheetOptions = JSX.IonActionSheet;
export declare const IonActionSheet: {
    new (props: JSX.IonActionSheet & import("./createOverlayComponent").ReactOverlayProps): {
        overlay?: HTMLIonActionSheetElement | undefined;
        el: HTMLDivElement;
        componentDidMount(): void;
        componentDidUpdate(prevProps: JSX.IonActionSheet & import("./createOverlayComponent").ReactOverlayProps): Promise<void>;
        present(prevProps?: (JSX.IonActionSheet & import("./createOverlayComponent").ReactOverlayProps) | undefined): Promise<void>;
        render(): import("react").ReactPortal;
        context: any;
        setState<K extends never>(state: {} | ((prevState: Readonly<{}>, props: Readonly<JSX.IonActionSheet & import("./createOverlayComponent").ReactOverlayProps>) => {} | Pick<{}, K> | null) | Pick<{}, K> | null, callback?: (() => void) | undefined): void;
        forceUpdate(callBack?: (() => void) | undefined): void;
        readonly props: Readonly<JSX.IonActionSheet & import("./createOverlayComponent").ReactOverlayProps> & Readonly<{
            children?: import("react").ReactNode;
        }>;
        state: Readonly<{}>;
        refs: {
            [key: string]: import("react").ReactInstance;
        };
    };
    readonly displayName: string;
    contextType?: import("react").Context<any> | undefined;
};
